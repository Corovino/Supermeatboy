package tile;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.swing.text.Document;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.xml.sax.SAXException;

public class TileSet {
	private int tileHeight;
	private int tileWidth;
	private int firstgid;
	private int lastgid;
	private int imageWidth;
	private int imageHeight;
	private BufferedImage image;
	private ArrayList<Tile> alltiles;
	public TileSet(int tileHeight, int tileWidth, String source, int imageWidth, int imageHeight,  int firstgid){
		this.tileHeight = tileHeight;
		this.tileWidth = tileWidth;	
		this.imageWidth= imageWidth;
		this.imageHeight =  imageHeight;
		this.firstgid = firstgid;
		alltiles= new ArrayList<Tile>();
	}
	public void load(String src){
		
		image =(BufferedImage) Toolkit.getDefaultToolkit().createImage(src);
		int end = (imageWidth/tileWidth)*(imageHeight/tileHeight);
		for(int i=0;i<end;i++){
			int x=firstgid*(i-1)*tileHeight;
			int y = lastgid*(i-1)*tileWidth;		
			BufferedImage bi=image.getSubimage(x, y, tileWidth, tileHeight)			
			Tile tmp = new Tile(x,y,bi);
			alltiles.add(tmp);
		}
	}
	public void reader(String fname) throws XPathExpressionException, SAXException, ParserConfigurationException, IOException{
		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
		DocumentBuilder builder = factory.newDocumentBuilder();
		XPathFactory xpfactory = XPathFactory.newInstance();
      	XPath path = xpfactory.newXPath();
		File f = new File("resources/map1.tmx");
		Document doc = (Document) builder.parse(f);
		int numTileSets = Integer.parseInt(path.evaluate("counts(layer)", doc));
		for(int i=1;i<=numTileSets;i++){
			int w=Integer.parseInt(path.evaluate("/map/tileset["+i+"]/@tilewidth", doc));
			int h=Integer.parseInt(path.evaluate("/map/tileset["+i+"]/@tileheight", doc));
			int firstgid=Integer.parseInt(path.evaluate("/map/tileset["+i+"]/@firstgid", doc));
			int imagewidth=Integer.parseInt(path.evaluate("/map/tileset["+i+"]/image/@width", doc));
			int imageheight =Integer.parseInt(path.evaluate("/map/tileset["+i+"]/image/@height", doc));
			String src=path.evaluate("/map/tileset["+i+"]/image/@source", doc);
			TileSet ts = new TileSet(w,h,src,imagewidth,imageheight,firstgid);
			for(Tile t: ts.getTiles()){
				alltiles.add(t);
			}
		}
	}
	public ArrayList<Tile> getTiles(){
		return set;
	}
}
